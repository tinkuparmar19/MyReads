{"version":3,"sources":["BooksAPI.js","Book.js","Search.js","BookShelf.js","BookList.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","updateShelf","e","_this","props","changeShelf","target","value","_step","_this$props","this","title","currentShelf","_iterator","_createForOfIteratorHelper","s","n","done","err","f","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","defaultValue","disabled","authors","map","author","index","key","React","Component","Search","state","Books","updataQuery","setState","BooksAPI","trim","length","_this2","_this$state","react_router_dom","to","type","placeholder","src_Book","BookShelf","BookList","bookshelf","filter","src_BookShelf","BooksApp","changebook","currentState","_this3","react_router","path","render","src_Search","exact","src_BookList","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.389ee9d2.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Book extends React.Component {\n    static propTypes = {\n      book: PropTypes.object.isRequired,\n      changeShelf: PropTypes.func.isRequired,\n      books: PropTypes.array.isRequired\n    }\n\n    updateShelf = (e) => {\n      this.props.changeShelf(this.props.book, e.target.value)\n    }\n\n    render() {\n        const { book, books } = this.props\n        const title = book.title ? book.title : 'no title' \n        let currentShelf = 'none'\n        for (let data of books) {\n          if (data.id === book.id) {\n            currentShelf = data.shelf\n            break\n          }\n        }\n        return (\n            <div className=\"book\">\n            <div className=\"book-top\">  \n              <div className=\"book-cover\"                 \n                style={{ width: 128, height: 193,\n                         backgroundImage: `url(${book.imageLinks.thumbnail})` }}>                  \n              </div>\n              <div className=\"book-shelf-changer\">\n                <select onChange={this.updateShelf} defaultValue={currentShelf}>\n                  <option value=\"move\" disabled>Move to...</option>\n                  <option value=\"currentlyReading\">Currently Reading</option>\n                  <option value=\"wantToRead\">Want to Read</option>\n                  <option value=\"read\">Read</option>\n                  <option value=\"none\">None</option>\n                </select>\n              </div>\n            </div>\n          <div className=\"book-title\">{title}</div>\n          { book.authors.map((author, index) => (\n            <div className=\"book-authors\" key={index}>{author}</div>\n          ))}   \n          </div>\n        )\n    }\n}\n\nexport default Book","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\nimport PropTypes from 'prop-types'\n\nclass Search extends React.Component {\n    static propTypes = {\n      books: PropTypes.array.isRequired,\n      changeShelf: PropTypes.func.isRequired\n    }\n    state = {\n      query: '',\n      Books: [],\n      err: false\n    }\n    updataQuery = (query) => {\n      this.setState({ query })\n      if (query) {\n        BooksAPI.search(query.trim(), 20)\n        .then(books => {\n          if(books.length > 0) {\n            this.setState({ Books: books, err: false })\n          } else {\n            this.setState({ Books: [], err: true})\n          }\n        }) \n        } else {\n          this.setState({ Books: [], err: false })\n      }\n    } \n    render() {\n        const { Books, query, err } = this.state\n        const { changeShelf, books } = this.props\n        return (\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link\n                to='/'\n                className='close-search'\n              > close\n              </Link>\n              <div className=\"search-books-input-wrapper\">\n                <input type=\"text\" \n                       placeholder=\"Search by title or author\"\n                       value={query}\n                       onChange={(e) => this.updataQuery(e.target.value)}/>\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              { Books.length > 0 && (\n                <div>\n                <p>{Books.length} items</p>\n                <ol className=\"books-grid\">\n                  {Books.map(book => (\n                    <Book \n                      book={book}\n                      key={book.id}\n                      changeShelf={changeShelf}\n                      books={books}\n                    />\n                  ))}\n                </ol>\n                </div>\n              )}\n              { err && (\n                <p>try again</p>\n              )}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Search","import React from 'react'\nimport Book from './Book'\nimport PropTypes from 'prop-types'\n\nclass BookShelf extends React.Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        changeShelf: PropTypes.func.isRequired\n    }\n    render() {\n        const { books, changeShelf } = this.props\n        return (\n            <ol className=\"books-grid\">\n                {books.map(book => (\n                    <Book book={book} key={book.id} changeShelf={changeShelf} books={books}/>\n            ))}\n            </ol>          \n        )\n    }\n}\n\nexport default BookShelf","import React from 'react'\nimport BookShelf from './BookShelf'\nimport PropTypes from 'prop-types'\n\nclass BookList extends React.Component {\n    static propTypes = {\n      books: PropTypes.array.isRequired,\n      changeShelf: PropTypes.func.isRequired\n    }\n    render() {\n        const { books, changeShelf } = this.props\n        const typeOfShelf = [\n          { type: 'currentlyReading', title: 'Currently Reading'},\n          { type: 'wantToRead', title: 'Want To Read'},\n          { type: 'read', title: 'Read'}\n        ]\n        return (\n            <div className=\"list-books-content\">\n              {typeOfShelf.map((shelf, index) => {\n                  const bookshelf = books.filter(book => book.shelf === shelf.type)\n                  return (\n                    <div className=\"bookshelf\" key={index}>\n                    <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n                    <div className=\"bookshelf-books\">\n                      <BookShelf \n                        books={bookshelf}\n                        changeShelf={changeShelf}/>\n                    </div>    \n                    </div>\n                  )\n              })}\n            </div>\n        )\n    }\n\n}\n\nexport default BookList","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Link, Route } from 'react-router-dom'\nimport Search from './Search'\nimport BookList from './BookList'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll() \n    .then((books) => {\n      this.setState(() => ({\n        books\n      }))\n    })\n  }\n\n  changeShelf = (changebook, shelf) => {\n    BooksAPI.update(changebook, shelf)\n    .then(res => {\n      changebook.shelf = shelf\n      this.setState((currentState => ({\n        books: currentState.books.filter(book => book.id !== changebook.id).concat(changebook)\n      })))\n    })\n  }\n\n  render() {\n    const { books } = this.state\n    return (\n      <div className=\"app\">\n        <Route \n        path='/search' render={() => (\n          <Search changeShelf={this.changeShelf} books={books}/>\n        )}\n        />\n        <Route \n          exact path='/' render={() => (\n          <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n            <BookList \n              books={books}\n              changeShelf={this.changeShelf}  \n            />\n          <div className=\"open-search\">\n              <Link \n                to='/search'\n              > Add a book\n              </ Link>\n          </div>\n          </div>\n        )}\n         />\n      </div>\n    )\n  }\n}\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}